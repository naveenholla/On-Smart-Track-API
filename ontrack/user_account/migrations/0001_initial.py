# Generated by Django 3.2.16 on 2022-10-19 13:20

from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('market_lookup', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('access_token', django_cryptography.fields.encrypt(models.CharField(max_length=500))),
                ('is_login_initated', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountStrategies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('capital', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('leverage', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('capital_per_set', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_hedged', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('decription', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=18)),
                ('account_opening_balance', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('account_close_balance', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('principal_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('interest_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('occurance_date', models.DateTimeField()),
                ('is_budget', models.BooleanField(default=False)),
                ('is_pursed', models.BooleanField(default=False)),
                ('sequence_number', models.IntegerField(blank=True, null=True)),
                ('previous_transaction_id', models.IntegerField(blank=True, null=True)),
                ('linked_transaction_id', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(max_length=100)),
                ('bill_path', models.CharField(max_length=100)),
                ('exclude_from_reports', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StrategyTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', django_cryptography.fields.encrypt(models.CharField(max_length=500))),
                ('initiated_time', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(blank=True, choices=[('CREATED', 'Created'), ('OPEN', 'Open'), ('COMPLETE', 'Complete'), ('ACTIVE', 'Active'), ('OPEN PENDING', 'Open Pending'), ('VALIDATION PENDING', 'Validation Pending'), ('PUT ORDER REQ RECEIVED', 'Put Order Req Received'), ('TRIGGER PENDING', 'Trigger Pending'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], max_length=50, null=True)),
                ('symbol', models.CharField(max_length=100)),
                ('symbol_current_market_price', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('exited_time', models.DateTimeField(blank=True, null=True)),
                ('pnl', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('capital', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('account_strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='user_account.accountstrategies')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='market_lookup.exchange')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StrategyTradeOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_type', models.CharField(blank=True, choices=[('PRIMARY', 'Primary'), ('STOP_LOSS', 'Stop Loss'), ('TARGET', 'Target')], max_length=50, null=True)),
                ('option_type', models.CharField(blank=True, choices=[('CE', 'Ce'), ('PE', 'Pe')], max_length=50, null=True)),
                ('quantity', models.IntegerField()),
                ('filled_quantity', models.IntegerField()),
                ('pending_quantity', models.IntegerField()),
                ('status', models.CharField(blank=True, choices=[('CREATED', 'Created'), ('OPEN', 'Open'), ('COMPLETE', 'Complete'), ('ACTIVE', 'Active'), ('OPEN PENDING', 'Open Pending'), ('VALIDATION PENDING', 'Validation Pending'), ('PUT ORDER REQ RECEIVED', 'Put Order Req Received'), ('TRIGGER PENDING', 'Trigger Pending'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], max_length=50, null=True)),
                ('institute_order_Id', models.CharField(max_length=50)),
                ('segment', models.CharField(blank=True, choices=[('Equity_Delivery', 'Equity Delivery'), ('Equity_Intraday', 'Equity Intraday'), ('Equity_Futures', 'Equity Futures'), ('Equity_Options', 'Equity Options'), ('CURRENCY', 'Currency'), ('COMMADITY', 'Commadity')], max_length=50, null=True)),
                ('entry_price', models.DecimalField(decimal_places=4, max_digits=18)),
                ('exit_price', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('initial_stoploss_price', models.DecimalField(decimal_places=4, max_digits=18)),
                ('trigger_Price', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('average_Price', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('current_market_price', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('direction', models.CharField(blank=True, choices=[('LONG', 'Long'), ('SHORT', 'Short')], max_length=50, null=True)),
                ('order_validate_type', models.CharField(blank=True, choices=[('MIS', 'Mis'), ('NRML', 'Nrml'), ('CNC', 'Cnc')], max_length=50, null=True)),
                ('order_execute_time', models.DateTimeField()),
                ('order_exit_time', models.DateTimeField(blank=True, null=True)),
                ('last_order_check_time', models.DateTimeField(blank=True, null=True)),
                ('exit_Reason', models.CharField(blank=True, choices=[('SL_HIT', 'Sl Hit'), ('TRAIL_SL_HIT', 'Trail Sl Hit'), ('TARGET_HIT', 'Target Hit'), ('SQUARE_OFF', 'Square Off'), ('SL_CANCELLED', 'Sl Cancelled'), ('TARGET_CANCELLED', 'Target Cancelled')], max_length=50, null=True)),
                ('message_from_instititue', models.CharField(max_length=200)),
                ('brokerage', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('stt', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('transaction_charges', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('gst', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('sebi', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('clearing_charges', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('stamp_duty', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('is_weekly_expiry', models.BooleanField(blank=True, null=True)),
                ('option_price', models.IntegerField(blank=True, null=True)),
                ('lot_size', models.IntegerField(blank=True, null=True)),
                ('learning_notes', models.CharField(max_length=200)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_record', to='user_account.strategytradeorder')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='user_account.strategytrade')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
