# Generated by Django 3.2.16 on 2022-10-19 13:20

from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('available_balance', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ledger_balance', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('exclude_from_reports', models.BooleanField(default=False)),
                ('ordinal', models.IntegerField()),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCheque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cheque_number', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('Date', models.DateTimeField(blank=True, null=True)),
                ('Amount', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('IsBudget', models.TextField()),
                ('is_cancelled', models.TextField()),
                ('is_used', models.TextField()),
                ('is_valid', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInterestRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('imterest_rate', models.DecimalField(decimal_places=4, max_digits=18)),
                ('emi_value', models.DecimalField(decimal_places=4, max_digits=18)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('is_financial', models.BooleanField(default=False)),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ordinal', models.IntegerField()),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DematAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client_id', models.CharField(max_length=50)),
                ('app_key', django_cryptography.fields.encrypt(models.CharField(max_length=500))),
                ('app_secret', django_cryptography.fields.encrypt(models.CharField(max_length=500))),
                ('Funds', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('available_cash', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('margin', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InterestRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('imterest_rate', models.DecimalField(decimal_places=4, max_digits=18)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TodoFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('folder_name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TodoTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(max_length=50)),
                ('details', models.TextField(blank=True, null=True)),
                ('default_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('reminder', models.BooleanField(default=False)),
                ('next_due_date', models.DateTimeField(blank=True, null=True)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todo_tasks', to='user_lookup.todofolder')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('is_expenses', models.BooleanField(null=True)),
                ('is_exclude_from_report', models.BooleanField(default=False)),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ordinal', models.IntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_record', to='user_lookup.transactiontype')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TodoTaskFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('frequency', models.CharField(choices=[('DEFAULT', 'Default'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUATERLY', 'Quaterly'), ('HALFYEARLY', 'Halfyearly'), ('YEARLY', 'Yearly')], default='MONTHLY', max_length=50)),
                ('frequency_count', models.IntegerField()),
                ('frequency_start_date', models.DateTimeField()),
                ('frequency_end_date', models.DateTimeField(blank=True, null=True)),
                ('timezone', models.CharField(max_length=100)),
                ('day_of_week', models.CharField(max_length=100)),
                ('day_of_month', models.CharField(max_length=100)),
                ('week_of_month', models.CharField(max_length=100)),
                ('month_of_year', models.CharField(max_length=100)),
                ('occurence_count', models.IntegerField()),
                ('remainder_time', models.TimeField(blank=True, null=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='todo_task_frequency', to='user_lookup.todotask')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
